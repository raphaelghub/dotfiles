# If both arguments provided, use traditional change_plan
if [ $# -eq 2 ]; then
  bin/rails dev:shop:change_plan SHOP_ID="$1" PLAN="$2"
  return
fi

# Interactive shop ID input
local shop_id
if [ $# -eq 1 ]; then
  shop_id="$1"
else
  shop_id=$(gum input --placeholder "Enter Shop ID (e.g., 12345)" --header "üè™ Shop ID:")
fi

if [ -z "$shop_id" ]; then
  gum style --foreground 196 "‚ùå Shop ID is required"
  return 1
fi

# Validate shop ID is numeric
if ! [[ "$shop_id" =~ ^[0-9]+$ ]]; then
  gum style --foreground 196 "‚ùå Shop ID must be numeric"
  return 1
fi

# Interactive plan selection
local plans=(
  "basic"
  "professional"
  "unlimited"
  "plus"
  "starter"
  "frozen"
  "trial"
  "cancelled"
)

local plan=$(printf '%s\n' "${plans[@]}" | gum choose --header "üíº Select Plan:")

if [ -z "$plan" ]; then
  gum style --foreground 196 "‚ùå No plan selected"
  return 1
fi

# Show what will be executed
gum style \
  --border normal \
  --margin "1" \
  --padding "1" \
  --border-foreground 212 \
  "üîÑ Changing plan for:" \
  "Shop ID: $shop_id" \
  "New Plan: $plan" \
  "" \
  "Command: bin/rails dev:shop:change_plan SHOP_ID=\"$shop_id\" PLAN=\"$plan\""

# Confirm execution
if gum confirm "Change plan for shop $shop_id to $plan?"; then
  bin/rails dev:shop:change_plan SHOP_ID="$shop_id" PLAN="$plan"
else
  gum style --foreground 196 "‚ùå Operation cancelled"
fi
